
services:
  postgresdb:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: backend
    volumes:
      - postgres-data:/var/lib/postgresql/data

  task-tracker-email-sender:
    container_name: email-sender
    build:
      context: ./task-tracker-email-sender
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_MAIL_USERNAME: ${MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${MAIL_PASSWORD}
    depends_on:
      - kafka
  
  task-tracker-scheduler:
    container_name: scheduler
    build:
      context: ./task-tracker-scheduler
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SCHEDULER_PASSWORD: ${SCHEDULER_PASSWORD}
      SCHEDULER_EMAIL: ${SCHEDULER_EMAIL}
    depends_on:
      - kafka
      - task-tracker-backend

  task-tracker-backend:
    container_name: backend
    build:
      context: ./task-tracker-backend
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      JWT_REFRESH_LIFETIME: ${REFRESH_LIFETIME}
      JWT_ACCESS_LIFETIME: ${ACCESS_LIFETIME}
      JWT_SECRET: ${SECRET}
      SCHEDULER_PASSWORD: ${SCHEDULER_PASSWORD}
      SCHEDULER_EMAIL: ${SCHEDULER_EMAIL}
    depends_on:
      - postgresdb
      - task-tracker-email-sender
  
  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/bitnami
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_KRAFT_CLUSTER_ID: 9
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-host.docker.internal}:9092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    restart: unless-stopped

volumes:
  postgres-data:
  kafka-data: